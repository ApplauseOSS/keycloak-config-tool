[
  {
    "name": "importTestRealm",
    "action": "importRealm",
    "description": "Import the test realm",
    "ignore": #{IGNORE_IMPORT_TEST_REALM},
    "realmName": "test",
    "realmFile": "keycloak/test-realm.json",
    "overwrite": true,
    "extra": "#{DEFAULT_PARAM_OVERRIDDEN}"
  },
  {
    "name": "runCustom",
    "action": "custom",
    "description": "Run a custom action",
    "file": "keycloak/test_custom.py",
    "realmName": "test"
  },
  {
    "name": "createTestRole",
    "action": "createRole",
    "description": "Create the test role",
    "realmName": "test",
    "role": {
      "name": "test-role-2",
      "description": "Test role 2"
    }
  },
  {
    "name": "createTestUser",
    "action": "createUser",
    "description": "Create the test user",
    "realmName": "test",
    "password": "test123",
    "roles": [ "test-role" ],
    "user": {
      "email": "test@example.com",
      "enabled": true,
      "emailVerified": true,
      "firstName": "Test",
      "lastName": "User"
    }
  },
  {
    "name": "createTestClient",
    "action": "createClient",
    "description": "Create the test client",
    "realmName": "test",
    "roles": [ "test-role", "test-role-2" ],
    "client": {
      "clientId" : "test-client",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "5b823107-4f19-4289-8997-d3df9906af5e",
      "redirectUris" : [ "/test-client", "/test-client-2" ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "saml.assertion.signature" : "false",
        "saml.force.post.binding" : "false",
        "saml.multivalued.roles" : "false",
        "saml.encrypt" : "false",
        "saml_force_name_id_format" : "false",
        "saml.client.signature" : "false",
        "saml.authnstatement" : "false",
        "saml.server.signature" : "false",
        "saml.server.signature.keyinfo.ext" : "false",
        "saml.onetimeuse.condition" : "false"
      },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "protocolMappers" : [ {
        "name" : "given name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-property-mapper",
        "consentRequired" : true,
        "consentText" : "${givenName}",
        "config" : {
          "userinfo.token.claim" : "true",
          "user.attribute" : "firstName",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "given_name",
          "jsonType.label" : "String"
        }
      }, {
        "name" : "full name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-full-name-mapper",
        "consentRequired" : true,
        "consentText" : "${fullName}",
        "config" : {
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "userinfo.token.claim" : "true"
        }
      }, {
        "name" : "Client Host",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "consentText" : "",
        "config" : {
          "user.session.note" : "clientHost",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "clientHost",
          "jsonType.label" : "String"
        }
      }, {
        "name" : "role list",
        "protocol" : "saml",
        "protocolMapper" : "saml-role-list-mapper",
        "consentRequired" : false,
        "config" : {
          "single" : "false",
          "attribute.nameformat" : "Basic",
          "attribute.name" : "Role"
        }
      }, {
        "name" : "Client IP Address",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "consentText" : "",
        "config" : {
          "user.session.note" : "clientAddress",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "clientAddress",
          "jsonType.label" : "String"
        }
      }, {
        "name" : "email",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-property-mapper",
        "consentRequired" : true,
        "consentText" : "${email}",
        "config" : {
          "userinfo.token.claim" : "true",
          "user.attribute" : "email",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "email",
          "jsonType.label" : "String"
        }
      }, {
        "name" : "username",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-property-mapper",
        "consentRequired" : true,
        "consentText" : "${username}",
        "config" : {
          "userinfo.token.claim" : "true",
          "user.attribute" : "username",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "preferred_username",
          "jsonType.label" : "String"
        }
      }, {
        "name" : "Client ID",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usersessionmodel-note-mapper",
        "consentRequired" : false,
        "consentText" : "",
        "config" : {
          "user.session.note" : "clientId",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "clientId",
          "jsonType.label" : "String"
        }
      }, {
        "name" : "family name",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-property-mapper",
        "consentRequired" : true,
        "consentText" : "${familyName}",
        "config" : {
          "userinfo.token.claim" : "true",
          "user.attribute" : "lastName",
          "id.token.claim" : "true",
          "access.token.claim" : "true",
          "claim.name" : "family_name",
          "jsonType.label" : "String"
        }
      } ],
      "useTemplateConfig" : false,
      "useTemplateScope" : false,
      "useTemplateMappers" : false
    }
  },
  {
    "name": "createTestClientForDeletion",
    "action": "createClient",
    "description": "Create another test client for delete test",
    "realmName": "test",
    "roles": [ "test-role", "test-role-2" ],
    "client": {
      "clientId" : "test-client-delete",
      "surrogateAuthRequired" : false,
      "enabled" : true,
      "clientAuthenticatorType" : "client-secret",
      "secret" : "5b823107-4f19-4289-8997-d3df9906af5e",
      "redirectUris" : [ "/test-client", "/test-client-2" ],
      "webOrigins" : [ ],
      "notBefore" : 0,
      "bearerOnly" : false,
      "consentRequired" : false,
      "standardFlowEnabled" : true,
      "implicitFlowEnabled" : false,
      "directAccessGrantsEnabled" : true,
      "serviceAccountsEnabled" : true,
      "publicClient" : false,
      "frontchannelLogout" : false,
      "protocol" : "openid-connect",
      "attributes" : {
        "saml.assertion.signature" : "false",
        "saml.force.post.binding" : "false",
        "saml.multivalued.roles" : "false",
        "saml.encrypt" : "false",
        "saml_force_name_id_format" : "false",
        "saml.client.signature" : "false",
        "saml.authnstatement" : "false",
        "saml.server.signature" : "false",
        "saml.server.signature.keyinfo.ext" : "false",
        "saml.onetimeuse.condition" : "false"
      },
      "fullScopeAllowed" : true,
      "nodeReRegistrationTimeout" : -1,
      "protocolMappers" : [ ],
      "useTemplateConfig" : false,
      "useTemplateScope" : false,
      "useTemplateMappers" : false
    }
  },
  {
    "name": "deleteTestClient",
    "action": "deleteClient",
    "description": "Delete the test client",
    "realmName": "test",
    "clients": ["test-client-delete"]
  }
]
